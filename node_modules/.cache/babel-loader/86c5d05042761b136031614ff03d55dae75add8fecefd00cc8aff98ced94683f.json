{"ast":null,"code":"var _jsxFileName = \"/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/Untitled/CodeChallenge-artAPI/tryArtAPI/tryArtAPI/src/components/organisms/allArtwork/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { getCollectionData } from '../../../artapi/artApi'; // assuming you have a function to fetch collection data from the API\nimport ImageCard from '../../molecules/ImageCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CollectionGrid = () => {\n  _s();\n  const [collectionData, setCollectionData] = useState([]);\n  useEffect(() => {\n    getCollectionData().then(data => setCollectionData(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    spacing: 2,\n    children: collectionData.slice(0, 9).map(item => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 6,\n      md: 4,\n      children: /*#__PURE__*/_jsxDEV(ImageCard, {\n        imageSource: item.webImage.url,\n        leftTypo: item.principalOrFirstMaker,\n        rightTypo: item.title,\n        imageClick: async () => console.log('Image clicked:', item.objectNumber)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, item.objectNumber, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(CollectionGrid, \"NlAfw4pYvUYIM8AB+xtp0PSj6sw=\");\n_c = CollectionGrid;\nexport default CollectionGrid;\nvar _c;\n$RefreshReg$(_c, \"CollectionGrid\");","map":{"version":3,"names":["React","useState","useEffect","Grid","getCollectionData","ImageCard","jsxDEV","_jsxDEV","CollectionGrid","_s","collectionData","setCollectionData","then","data","container","spacing","children","slice","map","item","xs","sm","md","imageSource","webImage","url","leftTypo","principalOrFirstMaker","rightTypo","title","imageClick","console","log","objectNumber","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/Untitled/CodeChallenge-artAPI/tryArtAPI/tryArtAPI/src/components/organisms/allArtwork/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Grid } from '@mui/material';\nimport { getCollectionData } from '../../../artapi/artApi'; // assuming you have a function to fetch collection data from the API\nimport ImageCard from '../../molecules/ImageCard';\n\ninterface CollectionItemType {\n  objectNumber: string;\n  title: string;\n  principalOrFirstMaker: string;\n  webImage: {\n    url: string;\n  };\n}\n\nconst CollectionGrid = () => {\n  const [collectionData, setCollectionData] = useState<CollectionItemType[]>([]);\n\n  useEffect(() => {\n    getCollectionData().then((data: React.SetStateAction<CollectionItemType[]>) => setCollectionData(data));\n  }, []);\n\n  return (\n    <Grid container spacing={2}>\n      {collectionData.slice(0, 9).map((item) => (\n        <Grid item xs={12} sm={6} md={4} key={item.objectNumber}>\n          <ImageCard\n            imageSource={item.webImage.url}\n            leftTypo={item.principalOrFirstMaker}\n            rightTypo={item.title}\n            imageClick={async () => console.log('Image clicked:', item.objectNumber)}\n          />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default CollectionGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAQ,eAAe;AACpC,SAASC,iBAAiB,QAAQ,wBAAwB,CAAC,CAAC;AAC5D,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAWlD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGV,QAAQ,CAAuB,EAAE,CAAC;EAE9EC,SAAS,CAAC,MAAM;IACdE,iBAAiB,CAAC,CAAC,CAACQ,IAAI,CAAEC,IAAgD,IAAKF,iBAAiB,CAACE,IAAI,CAAC,CAAC;EACzG,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA,CAACJ,IAAI;IAACW,SAAS;IAACC,OAAO,EAAE,CAAE;IAAAC,QAAA,EACxBN,cAAc,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAEC,IAAI,iBACnCZ,OAAA,CAACJ,IAAI;MAACgB,IAAI;MAACC,EAAE,EAAE,EAAG;MAACC,EAAE,EAAE,CAAE;MAACC,EAAE,EAAE,CAAE;MAAAN,QAAA,eAC9BT,OAAA,CAACF,SAAS;QACRkB,WAAW,EAAEJ,IAAI,CAACK,QAAQ,CAACC,GAAI;QAC/BC,QAAQ,EAAEP,IAAI,CAACQ,qBAAsB;QACrCC,SAAS,EAAET,IAAI,CAACU,KAAM;QACtBC,UAAU,EAAE,MAAAA,CAAA,KAAYC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEb,IAAI,CAACc,YAAY;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1E;IAAC,GANkClB,IAAI,CAACc,YAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOjD,CACP;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEX,CAAC;AAAC5B,EAAA,CArBID,cAAc;AAAA8B,EAAA,GAAd9B,cAAc;AAuBpB,eAAeA,cAAc;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
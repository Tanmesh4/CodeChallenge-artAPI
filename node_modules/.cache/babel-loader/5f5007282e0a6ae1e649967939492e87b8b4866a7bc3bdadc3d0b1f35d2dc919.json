{"ast":null,"code":"var _jsxFileName = \"/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/Untitled/CodeChallenge-artAPI/tryArtAPI/tryArtAPI/src/imageConstructor/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageConstructor = _ref => {\n  _s();\n  let {\n    width,\n    height\n  } = _ref;\n  const [tiles, setTiles] = useState([]);\n  useEffect(() => {\n    const fetchTiles = async () => {\n      const response = await fetch(`https://www.rijksmuseum.nl/api/en/collection/SK-C-216/tiles?&key=2esrTh6M`);\n      //console.log(response);\n      const data = await response.json();\n      let res = width * height;\n      let closestResolution = 0;\n      for (let i = 0; i < data.levels.length; i++) {\n        const distance = Math.sqrt((data.levels.width[i] - width) ** 2 + (data.levels.height[i] - height) ** 2);\n        if (distance < res) {\n          closestResolution = i;\n          res = distance;\n        }\n      }\n      console.log(\"data: \");\n      setTiles(data.levels[closestResolution].tiles);\n      //console.log(data[0].tiles);\n    };\n\n    fetchTiles();\n  }, [width, height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: tiles && tiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: tiles[0].url,\n      alt: \"Rijksmuseum collection\",\n      style: {\n        width,\n        height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageConstructor, \"K89rNACRvpWYUPpRRxSbp+VW0iM=\");\n_c = ImageConstructor;\nexport default ImageConstructor;\nvar _c;\n$RefreshReg$(_c, \"ImageConstructor\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ImageConstructor","_ref","_s","width","height","tiles","setTiles","fetchTiles","response","fetch","data","json","res","closestResolution","i","levels","length","distance","Math","sqrt","console","log","children","src","url","alt","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/Untitled/CodeChallenge-artAPI/tryArtAPI/tryArtAPI/src/imageConstructor/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\ninterface Tile {\n  url: string;\n  x: number;\n  y: number;\n}\n\ninterface Props {\n  width: number;\n  height: number;\n}\n\nconst ImageConstructor: React.FC<Props> = ({ width, height }) => {\n  const [tiles, setTiles] = useState<Tile[]>([]);\n\n  useEffect(() => {\n    const fetchTiles = async () => {\n      const response = await fetch(\n        `https://www.rijksmuseum.nl/api/en/collection/SK-C-216/tiles?&key=2esrTh6M`\n      );\n      //console.log(response);\n      const data = await response.json();\n      let res = width * height;\n      let closestResolution: number = 0;\n      for(let i=0; i< data.levels.length; i++) {\n        const distance = Math.sqrt((data.levels.width[i] - width) ** 2 + (data.levels.height[i] - height) ** 2);\n        if (distance < res) {\n            closestResolution = i;\n            res = distance;\n          }\n      }\n      console.log(\"data: \",);\n      setTiles(data.levels[closestResolution].tiles);\n      //console.log(data[0].tiles);\n      \n    };\n\n    fetchTiles();\n  }, [width, height]);\n\n  return (\n    <div>\n      {tiles && tiles.length > 0 ? (\n        <img\n          src={tiles[0].url}\n          alt=\"Rijksmuseum collection\"\n          style={{ width, height }}\n        />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </div>\n  );\n};\n\nexport default ImageConstructor;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAanD,MAAMC,gBAAiC,GAAGC,IAAA,IAAuB;EAAAC,EAAA;EAAA,IAAtB;IAAEC,KAAK;IAAEC;EAAO,CAAC,GAAAH,IAAA;EAC1D,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAS,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,MAAMU,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,2EACH,CAAC;MACD;MACA,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClC,IAAIC,GAAG,GAAGT,KAAK,GAAGC,MAAM;MACxB,IAAIS,iBAAyB,GAAG,CAAC;MACjC,KAAI,IAAIC,CAAC,GAAC,CAAC,EAAEA,CAAC,GAAEJ,IAAI,CAACK,MAAM,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;QACvC,MAAMG,QAAQ,GAAGC,IAAI,CAACC,IAAI,CAAC,CAACT,IAAI,CAACK,MAAM,CAACZ,KAAK,CAACW,CAAC,CAAC,GAAGX,KAAK,KAAK,CAAC,GAAG,CAACO,IAAI,CAACK,MAAM,CAACX,MAAM,CAACU,CAAC,CAAC,GAAGV,MAAM,KAAK,CAAC,CAAC;QACvG,IAAIa,QAAQ,GAAGL,GAAG,EAAE;UAChBC,iBAAiB,GAAGC,CAAC;UACrBF,GAAG,GAAGK,QAAQ;QAChB;MACJ;MACAG,OAAO,CAACC,GAAG,CAAC,QAAS,CAAC;MACtBf,QAAQ,CAACI,IAAI,CAACK,MAAM,CAACF,iBAAiB,CAAC,CAACR,KAAK,CAAC;MAC9C;IAEF,CAAC;;IAEDE,UAAU,CAAC,CAAC;EACd,CAAC,EAAE,CAACJ,KAAK,EAAEC,MAAM,CAAC,CAAC;EAEnB,oBACEL,OAAA;IAAAuB,QAAA,EACGjB,KAAK,IAAIA,KAAK,CAACW,MAAM,GAAG,CAAC,gBACxBjB,OAAA;MACEwB,GAAG,EAAElB,KAAK,CAAC,CAAC,CAAC,CAACmB,GAAI;MAClBC,GAAG,EAAC,wBAAwB;MAC5BC,KAAK,EAAE;QAAEvB,KAAK;QAAEC;MAAO;IAAE;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,gBAEF/B,OAAA;MAAAuB,QAAA,EAAG;IAAU;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EACjB;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAzCIF,gBAAiC;AAAA+B,EAAA,GAAjC/B,gBAAiC;AA2CvC,eAAeA,gBAAgB;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
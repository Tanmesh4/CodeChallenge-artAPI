{"ast":null,"code":"var _jsxFileName = \"/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/atom/imageConstrtuctor/index.tsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Loading from \"../Loading\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageConstructor = _ref => {\n  _s();\n  let {\n    width,\n    height,\n    id\n  } = _ref;\n  const [tiles, setTiles] = useState([]);\n  useEffect(() => {\n    const fetchTiles = async () => {\n      try {\n        const response = await axios.get(`https://www.rijksmuseum.nl/api/en/collection/${id}/tiles?&key=2esrTh6M`);\n        const data = response.data;\n        let res = width * height;\n        let closestResolution = 0;\n        for (let i = 0; i < data.levels.length; i++) {\n          const distance = Math.sqrt((data.levels[i].width - width) ** 2 + (data.levels[i].height - height) ** 2);\n          if (distance < res) {\n            closestResolution = i;\n            res = distance;\n          }\n        }\n        console.log(\"my tiles: \", data.levels[closestResolution]);\n        setTiles(data.levels[closestResolution].tiles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTiles();\n  }, [width, height, id]);\n  const renderTiles = () => {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${Math.ceil(width / 256)}, 256px)`,\n        gap: \"0px\",\n        maxWidth: \"450px\"\n      },\n      children: tiles.map((tile, index) => {\n        const {\n          url,\n          x,\n          y\n        } = tile;\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: \"Rijksmuseum collection\",\n          style: {\n            width: 256,\n            height: 256,\n            position: \"relative\",\n            top: `${y}px`,\n            left: `${x}px`\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\"\n    },\n    \"data-testid\": \"imageConstructor\",\n    children: tiles && tiles.length > 0 ? renderTiles() : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 52\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageConstructor, \"K89rNACRvpWYUPpRRxSbp+VW0iM=\");\n_c = ImageConstructor;\nexport default ImageConstructor;\nvar _c;\n$RefreshReg$(_c, \"ImageConstructor\");","map":{"version":3,"names":["Box","axios","React","useState","useEffect","Loading","jsxDEV","_jsxDEV","ImageConstructor","_ref","_s","width","height","id","tiles","setTiles","fetchTiles","response","get","data","res","closestResolution","i","levels","length","distance","Math","sqrt","console","log","error","renderTiles","sx","display","gridTemplateColumns","ceil","gap","maxWidth","children","map","tile","index","url","x","y","src","alt","style","position","top","left","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/atom/imageConstrtuctor/index.tsx"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Loading from \"../Loading\";\n\ninterface ITile {\n  url: string;\n  x: number;\n  y: number;\n}\n\ninterface IImageConstructorProps {\n  width: number;\n  height: number;\n  id: string;\n}\n\nconst ImageConstructor: React.FC<IImageConstructorProps> = ({ width, height, id }) => {\n  const [tiles, setTiles] = useState<ITile[]>([]);\n\n  useEffect(() => {\n    const fetchTiles = async () => {\n      try {\n        const response = await axios.get(\n          `https://www.rijksmuseum.nl/api/en/collection/${id}/tiles?&key=2esrTh6M`\n        );\n        const data = response.data;\n        let res = width * height;\n        let closestResolution: number = 0;\n        for(let i=0; i< data.levels.length; i++) {\n          const distance = Math.sqrt((data.levels[i].width - width) ** 2 + (data.levels[i].height - height) ** 2);\n          if (distance < res) {\n              closestResolution = i;\n              res = distance;\n            }\n        }\n        console.log(\"my tiles: \",data.levels[closestResolution]);\n        setTiles(data.levels[closestResolution].tiles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n      \n    fetchTiles();\n  }, [width, height, id]);\n\n  const renderTiles = () => {\n    return (\n      <Box\n        sx={{\n          display: \"grid\",\n          gridTemplateColumns: `repeat(${Math.ceil(width / 256)}, 256px)`,\n          gap: \"0px\",\n          maxWidth: \"450px\"\n        }}\n      >\n        {tiles.map((tile, index) => {\n          const { url, x, y } = tile;\n          return (\n            <img\n              key={index}\n              src={url}\n              alt=\"Rijksmuseum collection\"\n              style={{ width: 256, height: 256, position: \"relative\", top: `${y}px`, left: `${x}px`}}\n            />\n          );\n        })}\n      </Box>\n    );\n  };\n\n  return (\n    <Box sx={{ display: \"flex\" }} data-testid=\"imageConstructor\">\n      {tiles && tiles.length > 0 ? renderTiles() : <Loading />}\n    </Box>\n  );\n};\n\nexport default ImageConstructor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
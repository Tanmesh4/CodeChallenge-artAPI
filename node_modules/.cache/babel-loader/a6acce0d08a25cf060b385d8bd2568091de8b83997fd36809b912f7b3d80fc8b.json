{"ast":null,"code":"var _jsxFileName = \"/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/atom/imageConstructor/index.tsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageConstructor = _ref => {\n  _s();\n  let {\n    width,\n    height,\n    id\n  } = _ref;\n  const [tiles, setTiles] = useState([]);\n  const [loadedTiles, setLoadedTiles] = useState(0);\n  const imageRef = useRef(null);\n  useEffect(() => {\n    const fetchTiles = async () => {\n      try {\n        const response = await axios.get(`https://www.rijksmuseum.nl/api/en/collection/${id}/tiles?&key=2esrTh6M`);\n        const data = response.data;\n        let res = width * height;\n        let closestResolution = 0;\n        for (let i = 0; i < data.levels.length; i++) {\n          const distance = Math.sqrt((data.levels[i].width - width) ** 2 + (data.levels[i].height - height) ** 2);\n          if (distance < res) {\n            closestResolution = i;\n            res = distance;\n          }\n        }\n        setTiles(data.levels[closestResolution].tiles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTiles();\n  }, [width, height, id]);\n  useEffect(() => {\n    const drawImage = () => {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = width;\n      canvas.height = height;\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        tiles.forEach(tile => {\n          const tileImg = new Image();\n          tileImg.crossOrigin = \"anonymous\";\n          //console.log(\"tile img: \", tile.url);\n          tileImg.src = tile.url;\n          tileImg.onload = () => {\n            ctx.drawImage(tileImg, tile.x, tile.y);\n            setLoadedTiles(prevState => prevState + 1);\n          };\n          tileImg.onerror = () => {\n            setLoadedTiles(prevState => prevState + 1);\n          };\n        });\n        if (loadedTiles === tiles.length && imageRef.current) {\n          imageRef.current.src = canvas.toDataURL();\n          console.log(\"tile img: \", imageRef.current.src);\n        }\n      }\n    };\n    if (tiles.length > 0) {\n      drawImage();\n    }\n  }, [loadedTiles, tiles, width, height]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\"\n    },\n    \"data-testid\": \"imageConstructor\",\n    children: tiles && tiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\",\n      alt: \"Rijksmuseum collection\",\n      style: {\n        width,\n        height\n      },\n      ref: imageRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageConstructor, \"fMkrrFdubvNSBPdL6FyJKv95uJ8=\");\n_c = ImageConstructor;\nexport default ImageConstructor;\nvar _c;\n$RefreshReg$(_c, \"ImageConstructor\");","map":{"version":3,"names":["Box","axios","React","useEffect","useRef","useState","jsxDEV","_jsxDEV","ImageConstructor","_ref","_s","width","height","id","tiles","setTiles","loadedTiles","setLoadedTiles","imageRef","fetchTiles","response","get","data","res","closestResolution","i","levels","length","distance","Math","sqrt","error","console","drawImage","canvas","document","createElement","ctx","getContext","forEach","tile","tileImg","Image","crossOrigin","src","url","onload","x","y","prevState","onerror","current","toDataURL","log","sx","display","children","alt","style","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/atom/imageConstructor/index.tsx"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useEffect, useRef, useState } from \"react\";\n\ninterface ITile {\n  url: string;\n  x: number;\n  y: number;\n}\n\ninterface IImageConstructorProps {\n  width: number;\n  height: number;\n  id: string;\n}\n\nconst ImageConstructor: React.FC<IImageConstructorProps> = ({\n  width,\n  height,\n  id,\n}) => {\n  const [tiles, setTiles] = useState<ITile[]>([]);\n  const [loadedTiles, setLoadedTiles] = useState(0);\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    const fetchTiles = async () => {\n      try {\n        const response = await axios.get(\n          `https://www.rijksmuseum.nl/api/en/collection/${id}/tiles?&key=2esrTh6M`\n        );\n        const data = response.data;\n        let res = width * height;\n        let closestResolution: number = 0;\n        for (let i = 0; i < data.levels.length; i++) {\n          const distance = Math.sqrt(\n            (data.levels[i].width - width) ** 2 +\n              (data.levels[i].height - height) ** 2\n          );\n          if (distance < res) {\n            closestResolution = i;\n            res = distance;\n          }\n        }\n        setTiles(data.levels[closestResolution].tiles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTiles();\n  }, [width, height, id]);\n\n  useEffect(() => {\n    const drawImage = () => {\n      const canvas = document.createElement(\"canvas\");\n      canvas.width = width;\n      canvas.height = height;\n      const ctx = canvas.getContext(\"2d\");\n      if (ctx) {\n        tiles.forEach((tile) => {\n          const tileImg = new Image();\n          tileImg.crossOrigin = \"anonymous\";\n          //console.log(\"tile img: \", tile.url);\n          tileImg.src = tile.url;\n          tileImg.onload = () => {\n            ctx.drawImage(tileImg, tile.x, tile.y);\n            setLoadedTiles((prevState) => prevState + 1);\n          };\n          tileImg.onerror = () => {\n            setLoadedTiles((prevState) => prevState + 1);\n          };\n        });\n        if (loadedTiles === tiles.length && imageRef.current) {\n          imageRef.current!.src = canvas.toDataURL();\n          console.log(\"tile img: \", imageRef.current.src);\n        }\n      }\n    };\n\n    if (tiles.length > 0) {\n      drawImage();\n    }\n  }, [loadedTiles, tiles, width, height]);\n\n  return (\n    <Box sx={{ display: \"flex\" }} data-testid=\"imageConstructor\">\n      {tiles && tiles.length > 0 ? (\n        <img\n          src=\"\"\n          alt=\"Rijksmuseum collection\"\n          style={{ width, height }}\n          ref={imageRef}\n        />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </Box>\n  );\n};\n\nexport default ImageConstructor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/atom/imageConstructor/index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Box } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageConstructor = _ref => {\n  _s();\n  let {\n    width,\n    height,\n    id\n  } = _ref;\n  const [tiles, setTiles] = useState([]);\n  const [loadedTiles, setLoadedTiles] = useState(0);\n  const imageRef = useRef(null);\n  useEffect(() => {\n    const fetchTiles = async () => {\n      try {\n        const response = await axios.get(`https://www.rijksmuseum.nl/api/en/collection/${id}/tiles?&key=2esrTh6M`);\n        const data = response.data;\n        let res = width * height;\n        let closestResolution = 0;\n        for (let i = 0; i < data.levels.length; i++) {\n          const distance = Math.sqrt((data.levels[i].width - width) ** 2 + (data.levels[i].height - height) ** 2);\n          if (distance < res) {\n            closestResolution = i;\n            res = distance;\n          }\n        }\n        setTiles(data.levels[closestResolution].tiles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTiles();\n  }, [width, height, id]);\n  useEffect(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n    if (ctx && loadedTiles === tiles.length) {\n      tiles.forEach(tile => {\n        const tileImg = new Image();\n        tileImg.crossOrigin = 'Anonymous';\n        tileImg.src = `/api/proxy?url=${encodeURIComponent(tile.url)}`;\n        tileImg.onload = () => {\n          ctx.drawImage(tileImg, tile.x, tile.y);\n          setLoadedTiles(prevState => prevState + 1);\n        };\n        tileImg.onerror = () => {\n          setLoadedTiles(prevState => prevState + 1);\n        };\n      });\n    }\n    if (loadedTiles === tiles.length) {\n      if (imageRef.current) {\n        console.log(\"current: \", imageRef.current);\n        imageRef.current.src = canvas.toDataURL();\n        console.log(\"image ref : \", imageRef.current.src);\n      }\n    }\n  }, [loadedTiles, tiles, width, height]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: 'flex'\n    },\n    \"data-testid\": \"imageConstructor\",\n    children: tiles && tiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"\",\n      alt: \"Rijksmuseum collection\",\n      style: {\n        width,\n        height\n      },\n      ref: imageRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageConstructor, \"fMkrrFdubvNSBPdL6FyJKv95uJ8=\");\n_c = ImageConstructor;\nexport default ImageConstructor;\nvar _c;\n$RefreshReg$(_c, \"ImageConstructor\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","Box","jsxDEV","_jsxDEV","ImageConstructor","_ref","_s","width","height","id","tiles","setTiles","loadedTiles","setLoadedTiles","imageRef","fetchTiles","response","get","data","res","closestResolution","i","levels","length","distance","Math","sqrt","error","console","canvas","document","createElement","ctx","getContext","forEach","tile","tileImg","Image","crossOrigin","src","encodeURIComponent","url","onload","drawImage","x","y","prevState","onerror","current","log","toDataURL","sx","display","children","alt","style","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/atom/imageConstructor/index.tsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport { Box } from '@mui/material';\n\ninterface ITile {\n  url: string;\n  x: number;\n  y: number;\n}\n\ninterface IImageConstructorProps {\n  width: number;\n  height: number;\n  id: string;\n}\n\nconst ImageConstructor: React.FC<IImageConstructorProps> = ({ width, height, id }) => {\n  const [tiles, setTiles] = useState<ITile[]>([]);\n  const [loadedTiles, setLoadedTiles] = useState(0);\n  const imageRef = useRef<HTMLImageElement>(null);\n\n  useEffect(() => {\n    const fetchTiles = async () => {\n      try {\n        const response = await axios.get(\n          `https://www.rijksmuseum.nl/api/en/collection/${id}/tiles?&key=2esrTh6M`\n        );\n        const data = response.data;\n        let res = width * height;\n        let closestResolution: number = 0;\n        for (let i = 0; i < data.levels.length; i++) {\n          const distance = Math.sqrt((data.levels[i].width - width) ** 2 + (data.levels[i].height - height) ** 2);\n          if (distance < res) {\n            closestResolution = i;\n            res = distance;\n          }\n        }\n        setTiles(data.levels[closestResolution].tiles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    fetchTiles();\n  }, [width, height, id]);\n\n  useEffect(() => {\n    const canvas = document.createElement('canvas');\n    canvas.width = width;\n    canvas.height = height;\n    const ctx = canvas.getContext('2d');\n\n    if (ctx && loadedTiles === tiles.length) {\n      tiles.forEach((tile) => {\n        const tileImg = new Image();\n        tileImg.crossOrigin = 'Anonymous';\n        tileImg.src = `/api/proxy?url=${encodeURIComponent(tile.url)}`;\n        tileImg.onload = () => {\n          ctx.drawImage(tileImg, tile.x, tile.y);\n          setLoadedTiles((prevState) => prevState + 1);\n        };\n        tileImg.onerror = () => {\n          setLoadedTiles((prevState) => prevState + 1);\n        };\n      });\n    }\n\n    if (loadedTiles === tiles.length) {\n      if (imageRef.current) {\n        console.log(\"current: \",imageRef.current);\n        \n        imageRef.current.src = canvas.toDataURL();\n        console.log(\"image ref : \",imageRef.current.src);\n      }\n    }\n  }, [loadedTiles, tiles, width, height]);\n\n  return (\n    <Box sx={{ display: 'flex' }} data-testid=\"imageConstructor\">\n      {tiles && tiles.length > 0 ? (\n        <img src=\"\" alt=\"Rijksmuseum collection\" style={{ width, height }} ref={imageRef} />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </Box>\n  );\n};\n\nexport default ImageConstructor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
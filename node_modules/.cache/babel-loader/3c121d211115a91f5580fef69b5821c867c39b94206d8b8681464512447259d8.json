{"ast":null,"code":"var _jsxFileName = \"/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/atom/imageConstructor/index.tsx\",\n  _s = $RefreshSig$();\nimport { Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageConstructor = _ref => {\n  _s();\n  let {\n    width,\n    height,\n    id\n  } = _ref;\n  const [tiles, setTiles] = useState([]);\n  useEffect(() => {\n    const fetchTiles = async () => {\n      try {\n        const response = await axios.get(`https://www.rijksmuseum.nl/api/en/collection/${id}/tiles?&key=2esrTh6M`);\n        const data = response.data;\n        let res = width * height;\n        let closestResolution = 0;\n        for (let i = 0; i < data.levels.length; i++) {\n          const distance = Math.sqrt((data.levels[i].width - width) ** 2 + (data.levels[i].height - height) ** 2);\n          if (distance < res) {\n            closestResolution = i;\n            res = distance;\n          }\n        }\n        setTiles(data.levels[closestResolution].tiles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTiles();\n  }, [width, height, id]);\n  const constructImageUrl = (tiles, tileSize) => {\n    let baseUrl = tiles[0].url;\n    let tileWidth = tileSize;\n    let tileHeight = tileSize;\n    let columns = Math.ceil(width / tileSize);\n    let rows = Math.ceil(height / tileSize);\n    let url = \"\";\n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < columns; col++) {\n        let tileIndex = row * columns + col;\n        if (tileIndex >= tiles.length) break;\n        let tile = tiles[tileIndex];\n        let tileX = tile.x * tileWidth;\n        let tileY = tile.y * tileHeight;\n        url += `${baseUrl}?width=${tileWidth}&height=${tileHeight}&x=${tileX}&y=${tileY} `;\n      }\n    }\n    return url;\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      display: \"flex\"\n    },\n    \"data-testid\": \"imageConstructor\",\n    children: tiles && tiles.length > 0 ? /*#__PURE__*/_jsxDEV(\"img\", {\n      src: constructImageUrl(tiles, 256),\n      alt: \"Rijksmuseum collection\",\n      style: {\n        width,\n        height\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageConstructor, \"K89rNACRvpWYUPpRRxSbp+VW0iM=\");\n_c = ImageConstructor;\nexport default ImageConstructor;\nvar _c;\n$RefreshReg$(_c, \"ImageConstructor\");","map":{"version":3,"names":["Box","axios","React","useState","useEffect","jsxDEV","_jsxDEV","ImageConstructor","_ref","_s","width","height","id","tiles","setTiles","fetchTiles","response","get","data","res","closestResolution","i","levels","length","distance","Math","sqrt","error","console","constructImageUrl","tileSize","baseUrl","url","tileWidth","tileHeight","columns","ceil","rows","row","col","tileIndex","tile","tileX","x","tileY","y","sx","display","children","src","alt","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/atom/imageConstructor/index.tsx"],"sourcesContent":["import { Box } from \"@mui/material\";\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\n\ninterface ITile {\n  url: string;\n  x: number;\n  y: number;\n}\n\ninterface IImageConstructorProps {\n  width: number;\n  height: number;\n  id: string;\n}\n\nconst ImageConstructor: React.FC<IImageConstructorProps> = ({ width, height, id }) => {\n  const [tiles, setTiles] = useState<ITile[]>([]);\n\n  useEffect(() => {\n    const fetchTiles = async () => {\n      try {\n        const response = await axios.get(\n          `https://www.rijksmuseum.nl/api/en/collection/${id}/tiles?&key=2esrTh6M`\n        );\n        const data = response.data;\n        let res = width * height;\n        let closestResolution: number = 0;\n        for(let i=0; i< data.levels.length; i++) {\n          const distance = Math.sqrt((data.levels[i].width - width) ** 2 + (data.levels[i].height - height) ** 2);\n          if (distance < res) {\n            closestResolution = i;\n            res = distance;\n          }\n        }\n        setTiles(data.levels[closestResolution].tiles);\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchTiles();\n  }, [width, height, id]);\n\n  const constructImageUrl = (tiles: ITile[], tileSize: number): string => {\n    let baseUrl = tiles[0].url;\n    let tileWidth = tileSize;\n    let tileHeight = tileSize;\n    let columns = Math.ceil(width / tileSize);\n    let rows = Math.ceil(height / tileSize);\n    let url = \"\";\n    for (let row = 0; row < rows; row++) {\n      for (let col = 0; col < columns; col++) {\n        let tileIndex = row * columns + col;\n        if (tileIndex >= tiles.length) break;\n        let tile = tiles[tileIndex];\n        let tileX = tile.x * tileWidth;\n        let tileY = tile.y * tileHeight;\n        url += `${baseUrl}?width=${tileWidth}&height=${tileHeight}&x=${tileX}&y=${tileY} `;\n      }\n    }\n    return url;\n  };\n\n  return (\n    <Box sx={{display: \"flex\"}} data-testid=\"imageConstructor\">\n      {tiles && tiles.length > 0 ? (\n        <img\n          src={constructImageUrl(tiles, 256)}\n          alt=\"Rijksmuseum collection\"\n          style={{ width, height }}\n        />\n      ) : (\n        <p>Loading...</p>\n      )}\n    </Box>\n  );\n};\n\nexport default ImageConstructor;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
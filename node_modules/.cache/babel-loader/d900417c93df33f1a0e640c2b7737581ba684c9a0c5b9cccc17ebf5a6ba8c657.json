{"ast":null,"code":"var _jsxFileName = \"/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/molecules/TextBackButton/index.tsx\";\nimport { Button, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\nimport ImageComp from \"../../atom/Image\";\nimport BackButtonImage from \"../../../images/Chevron-left.svg\";\nimport theme from \"../../../theme/theme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RootButton = styled(Button)({\n  // display: \"flex\",\n  // alignItems: \"center\",\n  // justifyContent: \"center\",\n  padding: \"0\",\n  marginBottom: \"32px\"\n});\n_c = RootButton;\nconst TextBackButton = _ref => {\n  let {\n    handleBackToList\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(RootButton, {\n    onClick: handleBackToList,\n    startIcon: /*#__PURE__*/_jsxDEV(ImageComp, {\n      src: BackButtonImage,\n      alt: \"BackButton\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 18\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h5\",\n      color: theme.palette.primary.main,\n      children: \"Back to the List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c2 = TextBackButton;\nexport default TextBackButton;\nvar _c, _c2;\n$RefreshReg$(_c, \"RootButton\");\n$RefreshReg$(_c2, \"TextBackButton\");","map":{"version":3,"names":["Button","Typography","styled","React","ImageComp","BackButtonImage","theme","jsxDEV","_jsxDEV","RootButton","padding","marginBottom","_c","TextBackButton","_ref","handleBackToList","onClick","startIcon","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","children","variant","color","palette","primary","main","_c2","$RefreshReg$"],"sources":["/Users/tanmeshshah/Desktop/try-fulltime-jobs/React-applications/CodeChallenge-artAPI/src/components/molecules/TextBackButton/index.tsx"],"sourcesContent":["import { Box, Button, Typography, styled } from \"@mui/material\";\nimport React from \"react\";\nimport ImageComp from \"../../atom/Image\";\nimport BackButtonImage from \"../../../images/Chevron-left.svg\";\nimport theme from \"../../../theme/theme\";\n\ninterface ITextBackButton {\n  handleBackToList: any;\n}\n\nconst RootButton = styled(Button)({\n  // display: \"flex\",\n  // alignItems: \"center\",\n  // justifyContent: \"center\",\n  padding: \"0\",\n  marginBottom: \"32px\",\n});\n\nconst TextBackButton = ({ handleBackToList }: ITextBackButton) => {\n  return (\n    <RootButton\n      onClick={handleBackToList}\n      startIcon={<ImageComp src={BackButtonImage} alt=\"BackButton\" />}\n    >\n      {/* <ImageComp src={BackButtonImage} alt=\"BackButton\"/> */}\n      <Typography\n        variant=\"h5\"\n        color={theme.palette.primary.main}\n        children=\"Back to the List\"\n      />\n    </RootButton>\n  );\n};\n\nexport default TextBackButton;\n"],"mappings":";AAAA,SAAcA,MAAM,EAAEC,UAAU,EAAEC,MAAM,QAAQ,eAAe;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,kBAAkB;AACxC,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,OAAOC,KAAK,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMzC,MAAMC,UAAU,GAAGP,MAAM,CAACF,MAAM,CAAC,CAAC;EAChC;EACA;EACA;EACAU,OAAO,EAAE,GAAG;EACZC,YAAY,EAAE;AAChB,CAAC,CAAC;AAACC,EAAA,GANGH,UAAU;AAQhB,MAAMI,cAAc,GAAGC,IAAA,IAA2C;EAAA,IAA1C;IAAEC;EAAkC,CAAC,GAAAD,IAAA;EAC3D,oBACEN,OAAA,CAACC,UAAU;IACTO,OAAO,EAAED,gBAAiB;IAC1BE,SAAS,eAAET,OAAA,CAACJ,SAAS;MAACc,GAAG,EAAEb,eAAgB;MAACc,GAAG,EAAC;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAE;IAAAC,QAAA,eAGhEhB,OAAA,CAACP,UAAU;MACTwB,OAAO,EAAC,IAAI;MACZC,KAAK,EAAEpB,KAAK,CAACqB,OAAO,CAACC,OAAO,CAACC,IAAK;MAClCL,QAAQ,EAAC;IAAkB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACQ,CAAC;AAEjB,CAAC;AAACO,GAAA,GAdIjB,cAAc;AAgBpB,eAAeA,cAAc;AAAC,IAAAD,EAAA,EAAAkB,GAAA;AAAAC,YAAA,CAAAnB,EAAA;AAAAmB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}